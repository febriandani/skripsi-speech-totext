{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MIS-MPI\\\\skripsi-speech-totext\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SpeechToText() {\n  _s();\n  const [audioFile, setAudioFile] = useState(null);\n  const [transcription, setTranscription] = useState('');\n  const handleFileChange = event => {\n    setAudioFile(event.target.files[0]);\n  };\n  axios.defaults.withCredentials = true;\n  axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\n  const handleTranscription = async () => {\n    const formData = new FormData();\n    formData.append('audio', audioFile);\n    const response = await axios.post('https://api.openai.com/v1/speech-to-text', formData, {\n      model: 'whisper-1',\n      withCredentials: true,\n      headers: {\n        Authorization: 'Bearer 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',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'POST',\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    setTranscription(response.data.text);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"audio/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTranscription,\n      children: \"Transcribe Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: transcription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(SpeechToText, \"1jKyqVngxH8nFx11k1mrgTfc3Xc=\");\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","SpeechToText","_s","audioFile","setAudioFile","transcription","setTranscription","handleFileChange","event","target","files","defaults","withCredentials","headers","post","handleTranscription","formData","FormData","append","response","model","Authorization","data","text","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MIS-MPI/skripsi-speech-totext/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction SpeechToText() {\r\n  const [audioFile, setAudioFile] = useState(null);\r\n  const [transcription, setTranscription] = useState('');\r\n\r\n  const handleFileChange = (event) => {\r\n    setAudioFile(event.target.files[0]);\r\n  };\r\n\r\n  axios.defaults.withCredentials = true;\r\n  axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\n\r\n  const handleTranscription = async () => {\r\n    const formData = new FormData();\r\n    formData.append('audio', audioFile);\r\n    const response = await axios.post('https://api.openai.com/v1/speech-to-text', formData, {\r\n      model: 'whisper-1',\r\n      withCredentials: true,\r\n      headers: {\r\n        Authorization: 'Bearer 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',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Methods': 'POST',\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    });\r\n    setTranscription(response.data.text);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" accept=\"audio/*\" onChange={handleFileChange} />\r\n      <button onClick={handleTranscription}>Transcribe Audio</button>\r\n      <div>{transcription}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpeechToText;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAClCJ,YAAY,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACrC,CAAC;EAEDZ,KAAK,CAACa,QAAQ,CAACC,eAAe,GAAG,IAAI;EACrCd,KAAK,CAACa,QAAQ,CAACE,OAAO,CAACC,IAAI,CAAC,6BAA6B,CAAC,GAAG,GAAG;EAEhE,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEf,SAAS,CAAC;IACnC,MAAMgB,QAAQ,GAAG,MAAMrB,KAAK,CAACgB,IAAI,CAAC,0CAA0C,EAAEE,QAAQ,EAAE;MACtFI,KAAK,EAAE,WAAW;MAClBR,eAAe,EAAE,IAAI;MACrBC,OAAO,EAAE;QACPQ,aAAa,EAAE,4DAA4D;QAC3E,6BAA6B,EAAE,GAAG;QAClC,8BAA8B,EAAE,MAAM;QACtC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACFf,gBAAgB,CAACa,QAAQ,CAACG,IAAI,CAACC,IAAI,CAAC;EACtC,CAAC;EAED,oBACEvB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAOyB,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAEpB;IAAiB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClE/B,OAAA;MAAQgC,OAAO,EAAEjB,mBAAoB;MAAAS,QAAA,EAAC;IAAgB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/D/B,OAAA;MAAAwB,QAAA,EAAMnB;IAAa;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV;AAAC7B,EAAA,CAlCQD,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAoCrB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}